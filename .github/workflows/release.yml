name: Publish Release

on:
  push:
    tags:
      - 'v*' # For v1.0, v0.1.0, etc

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        java: [ 17 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        if: runner.os == 'Linux'
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --info

      - name: Upload build results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }} Java ${{ matrix.java }} build results
          path: ${{ github.workspace }}/build/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Publish with Gradle
        run: ./gradlew -Pver=${GITHUB_REF/refs\/tags\//} release

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Release Jar(s)
          path: ${{ github.workspace }}/build/libs/

      - name: Draft GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          body: |
            # Recent Changes

            ## Improvements üèóÔ∏è
            * Item 1

            ## Bug Fixes üêû
            * Item 2

      - name: Upload GitHub Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/build/libs/ExamplePlugin.jar
          asset_name: ExamplePlugin.jar
          asset_content_type: application/java-archive